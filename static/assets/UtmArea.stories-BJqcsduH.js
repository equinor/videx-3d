import{j as i}from"./jsx-runtime-CmIOflP4.js";import{C as q}from"./canvas-3d-decorator-DXFES1_8.js";import{b as V,g as w,U as h,a as p,w as j}from"./UtmPosition-D2cv2fVR.js";import{r as t}from"./index-KqYmeiyw.js";import{G as S}from"./Grid-BX9uDT_-.js";import{u as C}from"./useWellboreHeaders-GXAtugLG.js";import{s as m}from"./story-args-Cgt5gSNS.js";import{p as U}from"./uv-material-Cw8kPkQB.js";import"./CameraManager-BTlj_2qD.js";import"./numbers-DM6OWwIG.js";import"./limiter-DhBcc_yH.js";import"./Text-DbK8u8Ip.js";const c=({long:e,lat:a,altitude:r=0,children:l})=>{const n=t.useContext(V),o=t.useMemo(()=>n.wgs84ToArea(e,a,r),[e,a,r,n]);return i.jsx("group",{position:o,children:l})};try{c.displayName="Wgs84Position",c.__docgenInfo={description:"Container component which allows sub components positioned relative to a long lat coordinate. Used with the `UtmArea`\ncomponent.",displayName:"Wgs84Position",props:{long:{defaultValue:null,description:"",name:"long",required:!0,type:{name:"number"}},lat:{defaultValue:null,description:"",name:"lat",required:!0,type:{name:"number"}},altitude:{defaultValue:{value:"0"},description:"",name:"altitude",required:!1,type:{name:"number | undefined"}}}}}catch{}const f=e=>{const a=t.useContext(V),[r,l]=t.useState({origin:[0,0],originValue:[0,0],gridScale:[1,1]});return t.useEffect(()=>{const n=a.getWorldPosition();let o,s,d;e.plane==="xz"?(o=[n[0],n[2]],d=[1,-1],s=e.relativeValues?[0,0]:[a.originUtm[0],a.originUtm[1]]):e.plane==="xy"?(o=[n[0],n[1]],d=[1,1],s=e.relativeValues?[0,0]:[a.originUtm[0],0]):(o=[n[2],n[1]],d=[-1,1],s=e.relativeValues?[0,0]:[a.originUtm[1],0]),l({origin:o,originValue:s,gridScale:d})},[a,e.plane,e.relativeValues]),i.jsx(S,{...e,gridOrigin:r.origin,originValue:r.originValue,gridScale:r.gridScale})};try{f.displayName="UtmGrid",f.__docgenInfo={description:"A convenience component for setting up a Grid component with Utm coordinates.",displayName:"UtmGrid",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string | undefined"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean | undefined"}},userData:{defaultValue:null,description:"",name:"userData",required:!1,type:{name:"Record<string, any> | undefined"}},position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:"Vec3 | undefined"}},castShadow:{defaultValue:null,description:"",name:"castShadow",required:!1,type:{name:"boolean | undefined"}},receiveShadow:{defaultValue:null,description:"",name:"receiveShadow",required:!1,type:{name:"boolean | undefined"}},renderOrder:{defaultValue:null,description:"",name:"renderOrder",required:!1,type:{name:"number | undefined"}},layers:{defaultValue:null,description:"",name:"layers",required:!1,type:{name:"Layers | undefined"}},plane:{defaultValue:null,description:"",name:"plane",required:!0,type:{name:'"xz" | "xy" | "zy"'}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"Vec2"}},cellSize:{defaultValue:null,description:"",name:"cellSize",required:!1,type:{name:"number | undefined"}},subDivisions:{defaultValue:null,description:"",name:"subDivisions",required:!1,type:{name:"number | undefined"}},gridOrigin:{defaultValue:null,description:"",name:"gridOrigin",required:!1,type:{name:"Vec2 | undefined"}},gridScale:{defaultValue:null,description:"",name:"gridScale",required:!1,type:{name:"Vec2 | undefined"}},background:{defaultValue:null,description:"",name:"background",required:!1,type:{name:"string | number | Color | undefined"}},backgroundOpacity:{defaultValue:null,description:"",name:"backgroundOpacity",required:!1,type:{name:"number | undefined"}},opacity:{defaultValue:null,description:"",name:"opacity",required:!1,type:{name:"number | undefined"}},gridColorMajor:{defaultValue:null,description:"",name:"gridColorMajor",required:!1,type:{name:"string | number | Color | undefined"}},gridColorMinor:{defaultValue:null,description:"",name:"gridColorMinor",required:!1,type:{name:"string | number | Color | undefined"}},gridLineWidth:{defaultValue:null,description:"",name:"gridLineWidth",required:!1,type:{name:"number | undefined"}},showAxes:{defaultValue:null,description:"",name:"showAxes",required:!1,type:{name:"boolean | undefined"}},showAxesLabels:{defaultValue:null,description:"",name:"showAxesLabels",required:!1,type:{name:"boolean | undefined"}},trimAxesLabels:{defaultValue:null,description:"",name:"trimAxesLabels",required:!1,type:{name:"boolean | undefined"}},axesOffset:{defaultValue:null,description:"",name:"axesOffset",required:!1,type:{name:"Vec2 | undefined"}},axesColor:{defaultValue:null,description:"",name:"axesColor",required:!1,type:{name:"string | number | Color | undefined"}},axesLineWidth:{defaultValue:null,description:"",name:"axesLineWidth",required:!1,type:{name:"number | undefined"}},axesTickSize:{defaultValue:null,description:"",name:"axesTickSize",required:!1,type:{name:"number | undefined"}},originValue:{defaultValue:null,description:"",name:"originValue",required:!1,type:{name:"Vec2 | undefined"}},radial:{defaultValue:null,description:"",name:"radial",required:!1,type:{name:"boolean | undefined"}},dynamicSegments:{defaultValue:null,description:"",name:"dynamicSegments",required:!1,type:{name:"boolean | undefined"}},showRulers:{defaultValue:null,description:"",name:"showRulers",required:!1,type:{name:"boolean | undefined"}},rulerColor:{defaultValue:null,description:"",name:"rulerColor",required:!1,type:{name:"string | number | Color | undefined"}},rulerLineWidth:{defaultValue:null,description:"",name:"rulerLineWidth",required:!1,type:{name:"number | undefined"}},rulerOpacity:{defaultValue:null,description:"",name:"rulerOpacity",required:!1,type:{name:"number | undefined"}},planeOffset:{defaultValue:null,description:"",name:"planeOffset",required:!1,type:{name:"number | undefined"}},dynamicCellSize:{defaultValue:null,description:"",name:"dynamicCellSize",required:!1,type:{name:"boolean | undefined"}},cellSizeDistanceFactors:{defaultValue:null,description:"",name:"cellSizeDistanceFactors",required:!1,type:{name:"number[][] | undefined"}},side:{defaultValue:null,description:"",name:"side",required:!1,type:{name:'"front" | "back" | "both" | undefined'}},texture:{defaultValue:null,description:"",name:"texture",required:!1,type:{name:"Texture | undefined"}},textureMix:{defaultValue:null,description:"",name:"textureMix",required:!1,type:{name:"number | undefined"}},enableProjection:{defaultValue:null,description:"",name:"enableProjection",required:!1,type:{name:"boolean | undefined"}},projectionDistance:{defaultValue:null,description:"",name:"projectionDistance",required:!1,type:{name:"number | undefined"}},projectionColor:{defaultValue:null,description:"",name:"projectionColor",required:!1,type:{name:"string | number | Color | undefined"}},projectionResolution:{defaultValue:null,description:"",name:"projectionResolution",required:!1,type:{name:"number | undefined"}},projectionRefreshRate:{defaultValue:null,description:"",name:"projectionRefreshRate",required:!1,type:{name:"number | undefined"}},onRulerUpdate:{defaultValue:null,description:"",name:"onRulerUpdate",required:!1,type:{name:"((coords: Vec2 | null) => void) | null | undefined"}},relativeValues:{defaultValue:null,description:"",name:"relativeValues",required:!1,type:{name:"boolean | undefined"}}}}}catch{}const x=m.utmZone,v=U(w(x),j),H={title:"Components/Containers/UtmArea",component:h},u={args:{utmZone:x,origin:m.origin,originUnits:"utm",offset:[0,0,0]},decorators:[q],parameters:{scale:1e3,cameraPosition:[0,5e3,0],cameraTarget:[0,0,0]},render:e=>{const a=C(),r=t.useMemo(()=>Object.values(a).find(n=>n.id===m.defaultWellbore),[a]),l=t.useMemo(()=>r?v.forward([r.easting,r.northing]):null,[r]);return i.jsxs("group",{children:[i.jsxs(h,{utmZone:e.utmZone,origin:e.origin,originUnits:e.originUnits,offset:e.offset,children:[Object.values(a).map(n=>i.jsx(p,{easting:n.easting,northing:n.northing,altitude:-(n.kickoffDepthMsl||0),children:i.jsxs("mesh",{children:[i.jsx("sphereGeometry",{args:[100]}),i.jsx("meshStandardMaterial",{color:"red"})]})},n.id)),l&&i.jsx(c,{long:l[0],lat:l[1],altitude:500,children:i.jsxs("mesh",{children:[i.jsx("sphereGeometry",{args:[150]}),i.jsx("meshStandardMaterial",{color:"orange"})]})}),r&&i.jsx(p,{easting:r.easting,northing:r.northing,altitude:-(r.kickoffDepthMsl||0),children:i.jsx(f,{size:[3e4,3e4],cellSize:1e3,cellSizeDistanceFactors:[[0,.5],[40,1],[60,2],[70,5],[150,10],[250,25],[999,50]],subDivisions:5,dynamicCellSize:!1,plane:"xz",gridLineWidth:.015,opacity:.9,showAxes:!0,showRulers:!0})})]}),i.jsx("axesHelper",{args:[1e3]})]})}};var g,y,b;u.parameters={...u.parameters,docs:{...(g=u.parameters)==null?void 0:g.docs,source:{originalSource:`{
  args: {
    utmZone,
    origin: storyArgs.origin as Vec2,
    originUnits: 'utm',
    offset: [0, 0, 0]
  },
  decorators: [Canvas3dDecorator],
  parameters: {
    scale: 1000,
    cameraPosition: [0, 5000, 0],
    cameraTarget: [0, 0, 0]
  },
  render: args => {
    const wellboreHeaders = useWellboreHeaders();
    const wellbore = useMemo(() => Object.values(wellboreHeaders).find(d => d.id === storyArgs.defaultWellbore), [wellboreHeaders]);
    const wgs84coords = useMemo(() => wellbore ? converter.forward([wellbore.easting, wellbore.northing]) as Vec2 : null, [wellbore]);
    return <group>\r
        <UtmArea utmZone={args.utmZone} origin={args.origin} originUnits={args.originUnits} offset={args.offset}>\r
          {Object.values(wellboreHeaders).map(w => <UtmPosition key={w.id} easting={w.easting} northing={w.northing} altitude={-(w.kickoffDepthMsl || 0)}>\r
              <mesh>\r
                <sphereGeometry args={[100]} />\r
                <meshStandardMaterial color="red" />\r
              </mesh>\r
            </UtmPosition>)}\r
          {wgs84coords && <Wgs84Position long={wgs84coords[0]} lat={wgs84coords[1]} altitude={500}>\r
              <mesh>\r
                <sphereGeometry args={[150]} />\r
                <meshStandardMaterial color="orange" />\r
              </mesh>\r
            </Wgs84Position>}\r
          {wellbore && <UtmPosition easting={wellbore.easting} northing={wellbore.northing} altitude={-(wellbore.kickoffDepthMsl || 0)}>\r
              <UtmGrid
          //relativeValues
          size={[30000, 30000]} cellSize={1000} cellSizeDistanceFactors={[[0, 0.5], [40, 1], [60, 2], [70, 5], [150, 10], [250, 25], [999, 50]]} subDivisions={5} dynamicCellSize={false} plane='xz' gridLineWidth={0.015} opacity={0.9} showAxes showRulers
          //dynamicSegments
          />\r
            </UtmPosition>}\r
        </UtmArea>\r
        <axesHelper args={[1000]} />\r
      </group>;
  }
}`,...(b=(y=u.parameters)==null?void 0:y.docs)==null?void 0:b.source}}};const Z=["Default"];export{u as Default,Z as __namedExportsOrder,H as default};
